/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package dn05;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.awt.image.BufferedImageOp;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;

/**
 *
 * @author student
 */
public class Urejanje_plosca extends javax.swing.JPanel {

	/**
	 * Creates new form Urejanje_plosca
	 */
	public Urejanje_plosca() {
		initComponents();
	}
	
	public BufferedImage img = null;
	public BufferedImage osnovna = null;

	public void odpriSliko (File f) {
		try {
			BufferedImage image = ImageIO.read(f);
			img = new BufferedImage(image.getWidth(), image.getHeight(), BufferedImage.TYPE_INT_RGB);
			for (int i=0; i<image.getWidth(); i++) {
				for (int j=0; j<image.getHeight(); j++) {
					img.setRGB(i, j, image.getRGB(i, j));
				}
			}
			osnovna = img;
			repaint();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}
	
	public void shraniSliko (File s, String n) throws IOException {
		ImageIO.write(img, n, s);
	}
	
	public void glajenjeSlike() {
		float kernel[] = new float[81];
		for (int i=0; i < 81; i++) {
			kernel[i] = 1/81f;
		}
		
		BufferedImageOp imgOp = new ConvolveOp(new Kernel(9, 9, kernel));
		img = imgOp.filter(img, null);
		repaint();
	}
	
	public void ostrenjeSlike() {
		float kernel2[] = {-1,-1,-1,-1,9,-1,-1,-1,-1};
		
		BufferedImageOp imgOp2 = new ConvolveOp(new Kernel(3, 3, kernel2));
		img = imgOp2.filter(img, null);
		repaint();
		
	}
	
	public void original() {
		img = new BufferedImage(osnovna.getWidth(), osnovna.getHeight(), BufferedImage.TYPE_INT_RGB);
		for (int i = 0; i < osnovna.getWidth(); i++){
		    for(int j = 0; j < osnovna.getHeight(); j++){
			osnovna.setRGB(i, j, osnovna.getRGB(i, j));
		    }
		}
		img = osnovna;
		repaint();
	}
	
	public void roboviSlike() {
		float kernel3[] = {0,0,-1,-1,-1,0,0,
				 0,-2,-3,-3,-3,-2,0,
				 -1,-3,5,5,5,-3,-1,
				 -1,-3,5,16,5,-3,-1,
				 -1,-3,5,5,5,-3,-1,
				 0,-2,-3,-3,-3,-2,0,
				 0,0,-1,-1,-1,0,0};
		
		BufferedImageOp imgOp3 = new ConvolveOp(new Kernel(7, 7, kernel3));
		img = imgOp3.filter(img, null);
		repaint();	
		
	}
	
	public void menjajRGB (boolean red, boolean green, boolean blue) {
				
		for (int i=0; i < img.getWidth(); i++) {
			for (int j=0; j < img.getHeight(); j++) {
				int rgb = img.getRGB(i, j);
				int r = (rgb&0xff0000)>>16;
				int g = (rgb&0x00ff00)>>8;
				int b = (rgb&0x0000ff)>>0;
				/*
				int newRGB = img.getRGB(i, j);
				
				if (red || green || blue) {
					newRGB = 0;
					if (red) newRGB += (r<<16);
					if (green) newRGB += (g<<8);
					if (blue) newRGB += (b);
				}
				*/
				int newRGB = img.getRGB (i, j);
				
				if (!red && !green && !blue) newRGB = img.getRGB (i, j);
				else if (!red && !green && blue) newRGB = b;
				else if (!red && green && !blue) newRGB = (g<<8) ;
				else if (!red && green && blue) newRGB = (g<<8) + b;
				else if (red && !green && !blue) newRGB = (r<<16);
				else if (red && !green && blue) newRGB = (r<<16) + b;
				else if (red && green && !blue) newRGB = (r<<16) + (g<<8);
				else if (red && green && blue) newRGB = (r<<16) + (g<<8) + b;
				
				img.setRGB(i, j, newRGB);
			}
		}
		repaint();
	}
	
	
	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		setBackground(new Color (240,255,245));
		
		if (img != null) {
			g.drawImage(img, 0, 0, null);
			setPreferredSize(new Dimension (img.getWidth(), img.getHeight()));
			revalidate();
		}
	}
	
	
	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 400, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 300, Short.MAX_VALUE)
                );
        }// </editor-fold>//GEN-END:initComponents


        // Variables declaration - do not modify//GEN-BEGIN:variables
        // End of variables declaration//GEN-END:variables
}
